#ECCConsole


#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#
#ecclib

WORKDIR = `pwd`


#LDFLAGS      = -shared -fPIC -ldl



INC_RELEASE = $(INC)
#CFLAGS_RELEASE = $(CFLAGS) -Wall -O2 -DNEODEBUG -D_USE_UTF8_ -DNEOUSEMBCS -DNEO_STATIC -DLSA_EXPORTS_NOUSE -D__NOTUSEOPENSSL__  -fPIC 
CFLAGS_RELEASE = $(DEFCFLAGS) $(DEFINC) $(CFLAGS) $(INC)
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s



OUT_RELEASE = $(OUTDIR)/$(TITLE).a
OUT_SHARED_RELEASE = $(OUTDIR)/$(TITLE).so
OUT_DEBUG = $(OUTDIR)/$(TITLE)d.a
OUT_SHARED_DEBUG = $(OUTDIR)/$(TITLE)d.so



OBJDIR_RELEASE = $(OBJDIR)



OBJ_RELEASE = $(OBJDIR_RELEASE)/CSerialCP2130.o \
	$(OBJDIR_RELEASE)/EtcModule.o \
	$(OBJDIR_RELEASE)/MemoryNode.o \
	$(OBJDIR_RELEASE)/NeoCoLib.o \
	$(OBJDIR_RELEASE)/neoDebug.o \
	$(OBJDIR_RELEASE)/rs232.o \
	$(OBJDIR_RELEASE)/Util.o \
	$(OBJDIR_RELEASE)/SystemUtil.o \
	$(OBJDIR_RELEASE)/SystemUtil4Linux.o 		

					
OBJ_RELEASE_ALL =  $(OBJ_RELEASE)  $(DEP_RELEASE)

all: static

clean: clean_release

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OUTDIR) || mkdir -p $(OUTDIR)
	#test -d $(OBJDIR_BASE_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	#test -d $(OBJDIR_BASE_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	#test -d $(OBJDIR_RELEASE2) || mkdir -p $(OBJDIR_RELEASE2)

after_release: 
	mkdir -p ../include
	cp -f include/IUST-100.h ../include/
	cp -f include/iust100-proto-define.h ../include/
	cp -f ../../BASE/include/neoCoLib.h ../include/
	cp -f ../../BASE/include/neoDebug.h ../include/
	cp -f ../../BASE/include/comdef.h ../include/

static: before_release out_release after_release
share: before_release out_shared_release after_release


out_release: $(OBJ_RELEASE_ALL)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE_ALL) $(LIB_RELEASE)
	
out_shared_release: $(OBJ_RELEASE_ALL)
	echo $(OUT_SHARED_RELEASE)
	echo $(LDFLAGS)
	$(CXX) ${LDFLAGS} -o $(OUT_SHARED_RELEASE) $(OBJ_RELEASE_ALL) $(LIB_RELEASE)


	
$(OBJDIR_RELEASE)/%.o: ../src/%.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE)  -c -o $@ $<	
	
	

clean_release: 
	rm -f $(OBJ_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/src
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE2)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release


