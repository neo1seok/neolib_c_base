#ECCConsole

CC = gcc
CXX = g++
AR = ar
LD = gcc
WINDRES = windres
#OUTDIR = /home/ictk/project/lib/gnu
OUTDIR = ../lib/gnu
OBJDIR = obj/gnu
#LIB = ./lib/gnu/libcrypto.a
#LIB = ../bin/gnu/libecclib.a

#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#
#ecclib

WORKDIR = `pwd`


LDFLAGS      = -shared -fPIC 

INC = -Iinclude -I../../BASE/include

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -Wall -O2 -DNEODEBUG -D_USE_UTF8_ -DNEOUSEMBCS -DNEO_STATIC -DLSA_EXPORTS_NOUSE -D__NOTUSEOPENSSL__  -fPIC 
#CFLAGS_RELEASE = $(CFLAGS) -Wall -O2 -DNEODEBUG -D_USE_UTF8_ -DNEOUSEMBCS -DNEO_STATIC -DLSA_EXPORTS_NOUSE  -fPIC 
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = $(OBJDIR)
OBJDIR_RELEASE2 = $(OBJDIR)/2
DEP_RELEASE = 
#OUT_RELEASE = $(OUTDIR)/libIUST-100.so
OUT_RELEASE = $(OUTDIR)/libIUST-100_NOSSL.a


OBJ_RELEASE = $(OBJDIR_RELEASE)/CSerialRS232.o \
					$(OBJDIR_RELEASE)/EtcModule.o \
					$(OBJDIR_RELEASE)/MemoryNode.o \
					$(OBJDIR_RELEASE)/NeoCoLib.o \
					$(OBJDIR_RELEASE)/neoDebug.o \
					$(OBJDIR_RELEASE)/rs232.o \
					$(OBJDIR_RELEASE)/TempPF.o \
					$(OBJDIR_RELEASE)/Util.o \
					$(OBJDIR_RELEASE)/SystemUtil.o \
					$(OBJDIR_RELEASE)/SystemUtil4Linux.o 


OBJ_RELEASE2 = $(OBJDIR_RELEASE2)/CtrlIUST100.o \
					$(OBJDIR_RELEASE2)/IUST-100.o \
					$(OBJDIR_RELEASE2)/CtrlIUST100_PR.o 

all: release

clean: clean_release

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE2) || mkdir -p $(OBJDIR_RELEASE2)

#after_release: 
#	cp include/IRSD-1410lib.h ../include/

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(OBJ_RELEASE2)  $(DEP_RELEASE)
	#$(CXX) ${LDFLAGS} -o $(OUT_RELEASE) $(OBJ_RELEASE) $(OBJ_RELEASE2) $(LIB_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE) $(OBJ_RELEASE2) $(LIB_RELEASE)
	
$(OBJDIR_RELEASE)/%.o: ../../BASE/src/%.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE)  -c -o $@ $<
	
$(OBJDIR_RELEASE2)/%.o: src/%.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE)  -c -o $@ $<	
	
	

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/src
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE2)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release


